@page "/product"
@using ReactiveBlazor.Client.ReactiveUI.Forms
@using ReactiveBlazor.ViewModels.Products
@using ReactiveBlazor.Client.ReactiveUI
@inherits ReactiveBlazor.Client.Pages.Common.BasePage<ReactiveBlazor.ViewModels.Products.IProductViewModel>

<div class="m-container">
    <MudPaper Class="d-flex align-center justify-space-between pa-4">
        <div class="d-flex flex-column">
            <MudText Typo="Typo.h5">Product Details</MudText>
        </div>
    </MudPaper>

    <div class="m-content">
        <MudCard Class="pa-4">
            <ReactiveForm ViewModel="ViewModel">
                <MudStack>
                    <MudButton Variant="Variant.Filled" Color="Color.Inherit" OnClick="OnClearClicked">Clear</MudButton>
                    <ReactiveTextField
                        @ref="_productName"
                        @bind-Value="ViewModel!.Name"
                        For="@(() => ViewModel!.Name)"
                        T="string?"
                        Label="Product name"
                        Immediate="true"
                        Clearable="true"
                        Variant="Variant.Outlined"/>

                    <ReactiveTextField
                        @ref="_productDescription"
                        @bind-Value="ViewModel!.Description"
                        For="@(() => ViewModel!.Description)"
                        T="string?"
                        Label="Product Description"
                        Immediate="true"
                        Clearable="true"
                        Variant="Variant.Outlined"/>

                    <ReactiveDatePicker
                        @ref="_expirationDate"
                        @bind-Date="ViewModel!.ExpirationDate"
                        For="@(() => ViewModel!.ExpirationDate)"
                        Label="Expiration Date"
                        Clearable="true"
                        Variant="Variant.Outlined"/>
                    <MudButton Variant="Variant.Filled" Color="Color.Inherit" OnClick="@(() => ViewModel!.ExpirationDate = DateTime.Now.AddDays(10))">Set Valid Date</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Inherit" OnClick="@(() => ViewModel!.ExpirationDate = DateTime.Now.AddDays(-10))">Set Invalid Date</MudButton>
                    <ReactiveSelect
                        @ref="_category"
                        T="ProductCategory?"
                        @bind-Value="ViewModel!.Category"
                        For="@(() => ViewModel!.Category)"
                        Label="Category"
                        Clearable="true"
                        Variant="Variant.Outlined"
                        AnchorOrigin="Origin.BottomCenter">
                        @foreach (var category in ViewModel!.Categories)
                        {
                            <MudSelectItem T="ProductCategory?" Value="@((ProductCategory?)category)"/>
                        }
                    </ReactiveSelect>

                    <div class="validation-errors">
                        <ul>
                            @foreach (var error in ViewModel!.GetAllErrors())
                            {
                                <li>@error</li>
                            }
                        </ul>
                    </div>

                </MudStack>
            </ReactiveForm>
        </MudCard>
    </div>
</div>